apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply from: '../jacoco.gradle'
apply plugin: 'maven-publish'
apply plugin: 'com.github.dcendents.android-maven'

repositories {
    mavenCentral()
    google()
    jcenter()
    maven { url "https://jitpack.io" }
}

ext {
    libraryVersionCode = 18
    libraryVersionName = "1.4.2"

    publishedGroupId = 'com.crowdin.platform'
    libraryName = 'CrowdinAndroidSdk'
    artifact = 'sdk'

    libraryDescription = "Crowdin Android SDK delivers all new translations from Crowdin project to the application immediately. So there is no need to update this application via Google Play Store to get the new version with the localization."

    siteUrl = 'https://crowdin.com/'
    gitUrl = 'https://github.com/crowdin/mobile-sdk-android'

    libraryVersion = libraryVersionName

    developerId = 'mykhailo-nester'
    developerName = 'Mykhailo Nester'
    developerEmail = 'nsmisha.dev@gmail.com'

    licenseName = 'The MIT License'
    licenseUrl = 'https://opensource.org/licenses/MIT'
    allLicenses = ["MIT"]
}

group = publishedGroupId
version = libraryVersionName

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode libraryVersionCode
        versionName libraryVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            testCoverageEnabled = true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

buildscript {

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.30"
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "androidx.work:work-runtime-ktx:2.4.0"
    implementation "com.google.android.material:material:1.2.1"
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
    implementation "com.google.code.gson:gson:2.8.5"
    implementation "com.squareup.okhttp3:logging-interceptor:4.0.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.4.10"
    implementation "androidx.constraintlayout:constraintlayout:2.0.4"

    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.mockito:mockito-core:3.1.0'
}

// KtLint configuration
configurations {
    ktlint
}

dependencies {
    ktlint "com.pinterest:ktlint:0.35.0"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = publishedGroupId
                artifactId = artifact
                version = libraryVersionName
            }

            mavenJava(MavenPublication) {
                pom {
                    name = libraryName
                    description = libraryDescription
                    url = siteUrl
                    licenses {
                        license {
                            name = licenseName
                            url = licenseUrl
                        }
                    }
                    developers {
                        developer {
                            id = developerId
                            name = developerName
                            email = developerEmail
                        }
                    }
                    scm {
                        connection = gitUrl
                        developerConnection = gitUrl
                        url = siteUrl
                    }
                }
            }
        }
    }
}
